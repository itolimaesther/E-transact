[{"/home/esther/enye-challenge/src/App.js":"1","/home/esther/enye-challenge/src/index.js":"2","/home/esther/enye-challenge/src/components/lists/ProfileLists.js":"3","/home/esther/enye-challenge/src/reportWebVitals.js":"4","/home/esther/enye-challenge/src/components/lists/TableHeader.js":"5","/home/esther/enye-challenge/src/components/search/Search.js":"6","/home/esther/enye-challenge/src/components/pagination/Pagination.js":"7","/home/esther/enye-challenge/src/components/filter/GenderFilter.js":"8"},{"size":337,"mtime":1610328595741,"results":"9","hashOfConfig":"10"},{"size":478,"mtime":1610275715117,"results":"11","hashOfConfig":"10"},{"size":3865,"mtime":1610548630737,"results":"12","hashOfConfig":"10"},{"size":362,"mtime":1610275088320,"results":"13","hashOfConfig":"10"},{"size":245,"mtime":1610478426731,"results":"14","hashOfConfig":"10"},{"size":1003,"mtime":1610519378298,"results":"15","hashOfConfig":"10"},{"size":1194,"mtime":1610328576248,"results":"16","hashOfConfig":"10"},{"size":199,"mtime":1610549734548,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hpflqp",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/esther/enye-challenge/src/App.js",[],"/home/esther/enye-challenge/src/index.js",[],["36","37"],"/home/esther/enye-challenge/src/components/lists/ProfileLists.js",[],"/home/esther/enye-challenge/src/reportWebVitals.js",[],"/home/esther/enye-challenge/src/components/lists/TableHeader.js",[],"/home/esther/enye-challenge/src/components/search/Search.js",[],"/home/esther/enye-challenge/src/components/pagination/Pagination.js",["38"],"import React, { useEffect, useState, useMemo } from \"react\";\nimport Pagination from \"react-bootstrap/Pagination\";\n\nconst PaginationComponent = ({\n  total = 0,\n  itemsPerPage = 20,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const [totalPages, setTotalPages] = useState(0);\n\n  useEffect(() => {\n    if (total > 0 && itemsPerPage > 0)\n      setTotalPages(Math.ceil(total / itemsPerPage));\n  }, [total, itemsPerPage]);\n\n  const paginationItems = useMemo(() => {\n    const pages = [];\n\n    for (let i = 1; i <= totalPages; i++) {\n      pages.push(\n        <Pagination.Item\n          key={i}\n          active={i === currentPage}\n          onClick={() => onPageChange(i)}\n        >\n          {i}\n        </Pagination.Item>\n      );\n    }\n\n    return pages;\n  }, [totalPages, currentPage]);\n\n  if (totalPages === 0) return null;\n\n  return (\n    <Pagination>\n      <Pagination.Prev\n        onClick={() => onPageChange(currentPage - 1)}\n        disabled={currentPage === 1}\n      />\n      {paginationItems}\n      <Pagination.Next\n        onClick={() => onPageChange(currentPage + 1)}\n        disabled={currentPage === totalPages}\n      />\n    </Pagination>\n  );\n};\n\nexport default PaginationComponent;\n","/home/esther/enye-challenge/src/components/filter/GenderFilter.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":33,"column":6,"nodeType":"45","endLine":33,"endColumn":31,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'onPageChange'. Either include it or remove the dependency array. If 'onPageChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [totalPages, currentPage, onPageChange]",{"range":"52","text":"53"},[757,782],"[totalPages, currentPage, onPageChange]"]